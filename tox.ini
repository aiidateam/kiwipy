# To use tox, see https://tox.readthedocs.io
# Simply pip or conda install tox
# If you use conda, you may also want to install tox-conda
# then run `tox` or `tox -- {pytest args}`
# run in parallel using `tox -p`

# see also test/rmq/docker-compose.yml to start a rabbitmq server, required for the those tests

[tox]
envlist = py37

[testenv]
usedevelop = true

[testenv:py{36,37,38,39}]
description = Run the unit tests
extras =
    rmq
    tests
commands = pytest {posargs}

[testenv:pre-commit]
description = Run the style checks and formatting
extras =
    rmq
    pre-commit
    tests
commands = pre-commit run {posargs}

[testenv:docs-{update,clean}]
description = Build the documentation
extras =
    rmq
    docs
whitelist_externals = rm
commands =
    clean: rm -rf docs/_build
    sphinx-build -nW --keep-going -b {posargs:html} docs/source/ docs/_build/{posargs:html}

[testenv:docs-live]
description = Build the documentation and launch browser (with live updates)
extras = 
    rmq
    docs
deps = sphinx-autobuild
commands =
    sphinx-autobuild \
        --re-ignore _build/.* \
        --port 0 --open-browser \
        -n -b {posargs:html} docs/source/ docs/_build/{posargs:html}


[pytest]
filterwarnings =
    ignore::DeprecationWarning:distutils: